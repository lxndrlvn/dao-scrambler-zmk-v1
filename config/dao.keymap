/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        rus_he {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <9 10>;
        };

        rus_e {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <22 21>;
        };

        rus_hard {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        rus_yo {
            bindings = <&kp GRAVE>;
            key-positions = <4 5>;
        };

        DFG {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <16 15 14>;
        };

        iOS_lang {
            bindings = <&kp LC(SPACE)>;
            key-positions = <2 3 4>;
        };

        com_GUI {
            bindings = <&sk LEFT_GUI>;
            key-positions = <1 2>;
        };

        com_Ctrl {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <13 14>;
        };

        com_Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <25 26>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <38 39>;
        };

        JKL {
            bindings = <&kp RS(RIGHT_ALT)>;
            key-positions = <19 20 21>;
        };

    };

    macros {
        pw_crs: pw_crs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Q) &kp W &kp E &kp R &kp T &kp N5 &kp N4 &kp N3 &kp N2 &kp EXCL>;
            label = "PW_CRS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R            &kp T        &kp Y        &kp U            &kp I            &kp O    &kp P          &none
&none  &kp A  &kp S  &kp D      &kp F            &kp G        &kp H        &kp J            &kp K            &kp L    &kp SEMICOLON  &none
&none  &kp Z  &kp X  &kp C      &kp V            &kp B        &kp N        &kp M            &kp COMMA        &kp DOT  &kp SLASH      &none
                     &lt 2 TAB  &mt LSHFT SPACE  &lt 1 ENTER  &lt 1 ENTER  &mt RSHFT SPACE  &lt 2 BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&none  &kp SINGLE_QUOTE  &kp BACKSLASH  &kp MINUS     &kp EQUAL     &kp GRAVE     &kp PAGE_UP    &kp INSERT         &kp UP_ARROW     &kp RIGHT_BRACKET  &mt RGUI LEFT_BRACKET           &none
&none  &kp NUMBER_1      &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp PAGE_DOWN  &kp LEFT           &kp DOWN_ARROW   &kp RIGHT          &mt RIGHT_CONTROL SINGLE_QUOTE  &none
&none  &kp N6            &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &mt HOME END   &kp RIGHT_BRACKET  &kp PRINTSCREEN  &kp PAUSE_BREAK    &mt RALT CAPSLOCK               &none
                                        &lt 3 TAB     &trans        &trans        &trans         &trans             &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&none  &kp LEFT_GUI      &kp F1  &kp F2   &kp F3   &kp F4     &mt KP_NUMLOCK KP_DIVIDE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &mt RIGHT_GUI KP_SUBTRACT  &none
&none  &kp LEFT_CONTROL  &kp F5  &kp F6   &kp F7   &kp F8     &kp KP_DOT                &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &mt RIGHT_CONTROL KP_PLUS  &none
&none  &kp LEFT_ALT      &kp F9  &kp F10  &kp F11  &kp F12    &kp KP_NUMBER_0           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &mt RIGHT_ALT KP_MULTIPLY  &none
                                 &trans   &trans   &lt 3 RET  &lt 3 ESC                 &trans           &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_BRIGHTNESS_INC   &kp C_VOLUME_UP    &kp C_PREV        &none  &pw_crs  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_BRIGHTNESS_AUTO  &kp C_MUTE         &kp C_PLAY_PAUSE  &none  &none    &none
&none  &sys_reset    &bootloader   &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN  &kp C_NEXT        &none  &none    &none
                                   &trans        &trans        &trans        &trans                 &trans             &trans
            >;
        };
    };
};
